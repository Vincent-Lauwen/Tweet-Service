name: pipeline

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  analyse:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      #- name: Official SonarQube Scan üíÉ
      #  # You may pin to the exact commit or the version.
      #  # uses: SonarSource/sonarqube-scan-action@7295e71c9583053f5bf40e9d4068a0c974603ec8
      #  uses: SonarSource/sonarqube-scan-action@v1.1.0
      #  with:
      #      # Additional arguments to the sonar-scanner
      #      args: # optional
      #      # Set the sonar.projectBaseDir analysis property
      #      projectBaseDir: # optional, default is .

      #- name: SonarQube 
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
      #    SONAR_TOKEN: ${{ secrets.SONARQUBE_SECRET_TOKEN }}
      #    SONAR_HOST_URL: ${{ secrets.SONARQUBE_HOST }}
      #  run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=K4CZP3R_s6p-create-service_AX_5cOyx4Hw7FhtMoV9A

  test:
    needs: [analyse]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore ./Solution/TweetServer/TweetServer.csproj
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal


  publish_image:
    needs: [analyse, test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io/vincent-lauwen/tweet-service:main
          username: S6Vincent
          password:  ${{ secrets.GHCR_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          platfroms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}



